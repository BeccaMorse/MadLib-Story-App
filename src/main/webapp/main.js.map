{"version":3,"sources":["./src/environments/environment.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/register/register-home/register-home.component.ts","./src/app/register/register-home/register-home.component.html","./src/app/navbar/navbar.component.ts","./src/app/navbar/navbar.component.html","./src/app/app-routing.module.ts","./src/app/user.service.ts","./src/app/login/login-home/login-home.component.ts","./src/app/login/login-home/login-home.component.html","./src/main.ts","./$_lazy_route_resource lazy namespace object"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;AAAA;AAAA;AAAA,gFAAgF;AAChF,0EAA0E;AAC1E,gEAAgE;AAEzD,MAAM,WAAW,GAAG;IACzB,UAAU,EAAE,KAAK;CAClB,CAAC;AAEF;;;;;;GAMG;AACH,mEAAmE;;;;;;;;;;;;;ACfnE;AAAA;AAAA;AAAA;AAAA;AAA0C;;;;AAOnC,MAAM,YAAY;IALzB;QAME,UAAK,GAAG,UAAU,CAAC;KACpB;;wEAFY,YAAY;4FAAZ,YAAY;QCPzB,wEAAyB;QACzB,2EAA+B;;6FDMlB,YAAY;cALxB,uDAAS;eAAC;gBACT,QAAQ,EAAE,UAAU;gBACpB,WAAW,EAAE,sBAAsB;gBACnC,SAAS,EAAE,CAAC,qBAAqB,CAAC;aACnC;;;;;;;;;;;;;;AEND;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAA0D;AACjB;AAEe;AACT;AACa;AACJ;;AAgBjD,MAAM,SAAS;;wFAAT,SAAS,cAFR,2DAAY;4IAEb,SAAS,mBAHT,EAAE,YALJ;YACP,uEAAa;YACb,oEAAgB;YAChB,qEAAgB;SACjB;mIAIU,SAAS,mBAXlB,2DAAY;QACZ,wEAAe,aAGf,uEAAa;QACb,oEAAgB;QAChB,qEAAgB;6FAKP,SAAS;cAbrB,sDAAQ;eAAC;gBACR,YAAY,EAAE;oBACZ,2DAAY;oBACZ,wEAAe;iBAChB;gBACD,OAAO,EAAE;oBACP,uEAAa;oBACb,oEAAgB;oBAChB,qEAAgB;iBACjB;gBACD,SAAS,EAAE,EAAE;gBACb,SAAS,EAAE,CAAC,2DAAY,CAAC;aAC1B;;;;;;;;;;;;;;ACrBD;AAAA;AAAA;AAAA;AAAA;AAAkD;;;;AAS3C,MAAM,qBAAqB;IAEhC,YAAoB,MAAc,EAAU,WAAwB;QAAhD,WAAM,GAAN,MAAM,CAAQ;QAAU,gBAAW,GAAX,WAAW,CAAa;QAEpE,kBAAa,GAAW,EAAE,CAAC;QAC3B,kBAAa,GAAW,EAAE,CAAC;QAC3B,yBAAoB,GAAW,EAAE,CAAC;IAJsC,CAAC;IAMzE,eAAe,CAAC,KAAU;QACxB,IAAI,CAAC,aAAa,GAAG,KAAK,CAAC,MAAM,CAAC,KAAK,CAAC;QACxC,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,aAAa,CAAC,CAAC;IAClC,CAAC;IAED,eAAe,CAAC,KAAU;QACxB,IAAI,CAAC,aAAa,GAAG,KAAK,CAAC,MAAM,CAAC,KAAK,CAAC;QACxC,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,aAAa,CAAC,CAAC;IAClC,CAAC;IAED,sBAAsB,CAAC,KAAU;QAC/B,IAAI,CAAC,oBAAoB,GAAG,KAAK,CAAC,MAAM,CAAC,KAAK,CAAC;QAC/C,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,aAAa,CAAC,CAAC;IAClC,CAAC;IAED,QAAQ;IACR,CAAC;;0FAxBU,qBAAqB;qGAArB,qBAAqB;QCTlC,uEACI;QAAA,yEACE;QAAA,2EAAsB;QAAA,mEAAQ;QAAA,4DAAQ;QACtC,2EACF;QADS,kJAAS,2BAAuB,IAAC;QAAxC,4DACF;QAAA,4DAAM;QACN,yEACE;QAAA,2EAA2B;QAAA,mEAAQ;QAAA,4DAAQ;QAC3C,2EACF;QADS,kJAAS,2BAAuB,IAAC;QAAxC,4DACF;QAAA,4DAAM;QACN,yEACE;QAAA,4EAA6B;QAAA,4EAAgB;QAAA,4DAAQ;QACrD,4EACF;QADS,mJAAS,kCAA8B,IAAC;QAA/C,4DACF;QAAA,4DAAM;QACN,6EAA4D;QAAA,oEAAQ;QAAA,4DAAS;QAC/E,4DAAO;;6FDLI,qBAAqB;cALjC,uDAAS;eAAC;gBACT,QAAQ,EAAE,mBAAmB;gBAC7B,WAAW,EAAE,gCAAgC;gBAC7C,SAAS,EAAE,CAAC,+BAA+B,CAAC;aAC7C;;;;;;;;;;;;;;AERD;AAAA;AAAA;AAAA;AAAA;AAAkD;;;;AAS3C,MAAM,eAAe;IAE1B,YAAoB,MAAc,EAAS,WAAwB;QAA/C,WAAM,GAAN,MAAM,CAAQ;QAAS,gBAAW,GAAX,WAAW,CAAa;IAAI,CAAC;IAExE,QAAQ;IACR,CAAC;;8EALU,eAAe;+FAAf,eAAe;QCT5B,yEACI;QAAA,uEAAiC;QAAA,iEAAM;QAAA,4DAAI;QAC3C,4EACE;QAAA,qEAAyC;QAC3C,4DAAS;QAET,yEACE;QAAA,yEACE;QAAA,uEAA6C;QAAA,gEAAK;QAAA,0EAAsB;QAAA,qEAAS;QAAA,4DAAO;QAAA,4DAAI;QAC5F,wEAAoD;QAAA,oEAAQ;QAAA,4DAAI;QAChE,wEAAiD;QAAA,iEAAK;QAAA,4DAAI;QAC1D,yEAAkD;QAAA,kEAAM;QAAA,4DAAI;QAC5D,yEAA8D;QAAA,sEAAU;QAAA,4DAAI;QAC9E,4DAAM;QACR,4DAAM;QACR,4DAAM;;6FDNK,eAAe;cAL3B,uDAAS;eAAC;gBACT,QAAQ,EAAE,YAAY;gBACtB,WAAW,EAAE,yBAAyB;gBACtC,SAAS,EAAE,CAAC,wBAAwB,CAAC;aACtC;;;;;;;;;;;;;;AERD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAyC;AACc;AACqB;AACa;;;AAEzF,MAAM,MAAM,GAAW;IACrB,EAAC,IAAI,EAAE,OAAO,EAAE,SAAS,EAAE,yFAAkB,EAAC;IAC9C,EAAC,IAAI,EAAE,UAAU,EAAE,SAAS,EAAE,qGAAqB,EAAC;CACrD,CAAC;AAKK,MAAM,gBAAgB;;+FAAhB,gBAAgB;0JAAhB,gBAAgB,kBAHlB,CAAC,4DAAY,CAAC,OAAO,CAAC,MAAM,CAAC,CAAC,EAC7B,4DAAY;mIAEX,gBAAgB,uFAFjB,4DAAY;6FAEX,gBAAgB;cAJ5B,sDAAQ;eAAC;gBACR,OAAO,EAAE,CAAC,4DAAY,CAAC,OAAO,CAAC,MAAM,CAAC,CAAC;gBACvC,OAAO,EAAE,CAAC,4DAAY,CAAC;aACxB;;;;;;;;;;;;;;ACZD;AAAA;AAAA;AAAA;AAA2C;;;AAMpC,MAAM,WAAW;IAGtB,YAAoB,IAAe;QAAf,SAAI,GAAJ,IAAI,CAAW;QAFnC,SAAI,GAAG,IAAI,CAAC;IAE2B,CAAC;IAExC,YAAY,CAAC,IAAS;QACpB,OAAO,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,cAAc,EAAE,IAAI,CAAC;IAC7C,CAAC;IACD,SAAS,CAAC,IAAS;QACjB,OAAO,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,WAAW,EAAC,IAAI,CAAC;IACzC,CAAC;;sEAVU,WAAW;8FAAX,WAAW,WAAX,WAAW,mBAFV,MAAM;6FAEP,WAAW;cAHvB,wDAAU;eAAC;gBACV,UAAU,EAAE,MAAM;aACnB;;;;;;;;;;;;;;ACLD;AAAA;AAAA;AAAA;AAAA;AAAkD;;;;AAS3C,MAAM,kBAAkB;IAE7B,YAAoB,MAAc,EAAU,WAAwB;QAAhD,WAAM,GAAN,MAAM,CAAQ;QAAU,gBAAW,GAAX,WAAW,CAAa;QAEpE,kBAAa,GAAW,EAAE,CAAC;QAC3B,kBAAa,GAAW,EAAE,CAAC;IAH6C,CAAC;IAKzE,eAAe,CAAC,KAAU;QACxB,IAAI,CAAC,aAAa,GAAG,KAAK,CAAC,MAAM,CAAC,KAAK,CAAC;QACxC,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,aAAa,CAAC,CAAC;IAClC,CAAC;IAED,eAAe,CAAC,KAAU;QACxB,IAAI,CAAC,aAAa,GAAG,KAAK,CAAC,MAAM,CAAC,KAAK,CAAC;QACxC,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,aAAa,CAAC,CAAC;IAClC,CAAC;IAED,WAAW;QACT,MAAM,IAAI,GAAG;YACX,QAAQ,EAAE,IAAI,CAAC,aAAa;YAC5B,QAAQ,EAAE,IAAI,CAAC,aAAa;SAC7B,CAAC;QACF,IAAI;YACF,IAAI,CAAC,WAAW,CAAC,SAAS,CAAC,IAAI,CAAC,CAAC,SAAS,CAAC,CAAC,QAAa,EAAE,EAAE;gBAC3D,IAAI,CAAC,WAAW,CAAC,IAAI,GAAG,QAAQ,CAAC,QAAQ,CAAC;gBAC1C,IAAI,CAAC,MAAM,CAAC,aAAa,CAAC,EAAE,CAAC,CAAC;YAChC,CAAC,CAAC;SACH;QAAC,OAAM,KAAU,EAAE;YAClB,OAAO,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC;SACpB;IACH,CAAC;IAED,QAAQ;IACR,CAAC;;oFAjCU,kBAAkB;kGAAlB,kBAAkB;QCT/B,uEACI;QAAA,yEACE;QAAA,2EAAsB;QAAA,mEAAQ;QAAA,4DAAQ;QACtC,2EACF;QADS,+IAAS,2BAAuB,IAAC;QAAxC,4DACF;QAAA,4DAAM;QACN,yEACE;QAAA,2EAA2B;QAAA,mEAAQ;QAAA,4DAAQ;QAC3C,2EACF;QADS,+IAAS,2BAAuB,IAAC;QAAxC,4DACF;QAAA,4DAAM;QACN,4EAAiF;QAAzE,0IAAS,iBAAa,IAAC;QAAkD,iEAAK;QAAA,4DAAS;QACjG,4DAAO;;6FDDI,kBAAkB;cAL9B,uDAAS;eAAC;gBACT,QAAQ,EAAE,gBAAgB;gBAC1B,WAAW,EAAE,6BAA6B;gBAC1C,SAAS,EAAE,CAAC,4BAA4B,CAAC;aAC1C;;;;;;;;;;;;;;AERD;AAAA;AAAA;AAAA;AAAA;AAA+C;AAIU;;;AAEzD,IAAI,qEAAW,CAAC,UAAU,EAAE;IAC1B,oEAAc,EAAE,CAAC;CAClB;AAED,2EAAwB,gBAAgB,CAAC,0DAAU;KAChD,KAAK,CAAC,GAAG,CAAC,EAAE,CAAC,OAAO,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC;;;;;;;;;;;;ACXpC;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAE;AACF;AACA,4CAA4C,WAAW;AACvD;AACA;AACA,qC","file":"main.js","sourcesContent":["// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'frontend';\n}\n","<app-navbar></app-navbar>\n<router-outlet></router-outlet>","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { NavbarComponent } from './navbar/navbar.component';\nimport { HttpClientModule } from '@angular/common/http';\n\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    NavbarComponent\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    HttpClientModule\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { UserService } from '../../user.service'\n\n@Component({\n  selector: 'app-register-home',\n  templateUrl: './register-home.component.html',\n  styleUrls: ['./register-home.component.css']\n})\nexport class RegisterHomeComponent implements OnInit {\n\n  constructor(private router: Router, private userService: UserService) { }\n\n  usernameInput: string = \"\";\n  passwordInput: string = \"\";\n  confirmPasswordInput: string = \"\";\n\n  onUsernameInput(event: any) {\n    this.usernameInput = event.target.value;\n    console.log(this.usernameInput);\n  }\n\n  onPasswordInput(event: any) {\n    this.passwordInput = event.target.value;\n    console.log(this.passwordInput);\n  }\n\n  onConfirmPasswordInput(event: any) {\n    this.confirmPasswordInput = event.target.value;\n    console.log(this.passwordInput);\n  }\n\n  ngOnInit(): void {\n  }\n\n}\n","<form>\n    <div class=\"form-group\">\n      <label for=\"username\">Username</label>\n      <input (input)=\"onUsernameInput($event)\" type=\"text\" class=\"form-control\" id=\"username\" placeholder=\"Enter username\">\n    </div>\n    <div class=\"form-group\">\n      <label for=\"inputPassword\">Password</label>\n      <input (input)=\"onPasswordInput($event)\" type=\"password\" class=\"form-control\" id=\"inputPassword\" placeholder=\"Password\">\n    </div>\n    <div class=\"form-group\">\n      <label for=\"confirmPassword\">Confirm Password</label>\n      <input (input)=\"onConfirmPasswordInput($event)\" type=\"password\" class=\"form-control\" id=\"confirmPassword\" placeholder=\"Confirm Password\">\n    </div>\n    <button type=\"submit\" class=\"btn btn-primary\" id=\"register\">Register</button>\n  </form>","import { Component, OnInit } from '@angular/core';\nimport {Router} from '@angular/router';\nimport {UserService} from '../user.service'\n\n@Component({\n  selector: 'app-navbar',\n  templateUrl: './navbar.component.html',\n  styleUrls: ['./navbar.component.css']\n})\nexport class NavbarComponent implements OnInit {\n\n  constructor(private router: Router, public userService: UserService) { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<nav class=\"navbar navbar-expand-sm navbar-light bg-light\">\n    <a class=\"navbar-brand\" href=\"#\">Navbar</a>\n    <button class=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\"#navbarNavAltMarkup\" aria-controls=\"navbarNavAltMarkup\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\n      <span class=\"navbar-toggler-icon\"></span>\n    </button>\n  \n    <div class=\"collapse navbar-collapse\" id=\"navbarNavAltMarkup\">\n      <div class=\"navbar-nav\">\n        <a class=\"nav-item nav-link active\" href=\"#\">Home <span class=\"sr-only\">(current)</span></a>\n        <a class=\"nav-item nav-link\" routerLink=\"/register\">Register</a>\n        <a class=\"nav-item nav-link\" routerLink=\"/login\">Login</a>\n        <a class=\"nav-item nav-link\" routerLink=\"/logout\">Logout</a>\n        <a class=\"nav-item nav-link disabled\" routerLink=\"/templates\">Play Story</a>\n      </div>\n    </div>\n  </nav>\n  ","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { LoginHomeComponent} from './login/login-home/login-home.component';\nimport { RegisterHomeComponent } from './register/register-home/register-home.component';\n\nconst routes: Routes = [\n  {path: 'login', component: LoginHomeComponent},\n  {path: 'register', component: RegisterHomeComponent}\n];\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class UserService {\n  user = null;\n\n  constructor(private http:HttpClient) { }\n\n  registerUser(user: any) {\n    return this.http.post(\"api/register\", user)\n  }\n  loginUser(user: any) {\n    return this.http.post(\"api/login\",user)\n  }\n}\n","import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { UserService } from '../../user.service'\n\n@Component({\n  selector: 'app-login-home',\n  templateUrl: './login-home.component.html',\n  styleUrls: ['./login-home.component.css']\n})\nexport class LoginHomeComponent implements OnInit {\n  \n  constructor(private router: Router, private userService: UserService) { }\n\n  usernameInput: string = \"\";\n  passwordInput: string = \"\";\n\n  onUsernameInput(event: any) {\n    this.usernameInput = event.target.value;\n    console.log(this.usernameInput);\n  }\n\n  onPasswordInput(event: any) {\n    this.passwordInput = event.target.value;\n    console.log(this.passwordInput);\n  }\n  \n  handleLogin() {\n    const data = {\n      username: this.usernameInput,\n      password: this.passwordInput\n    };\n    try {\n      this.userService.loginUser(data).subscribe((response: any) => {\n        this.userService.user = response.username;\n        this.router.navigateByUrl('');\n      })\n    } catch(error: any) {\n      console.log(error);\n    }\n  }\n\n  ngOnInit(): void {\n  }\n\n}\n","<form>\n    <div class=\"form-group\">\n      <label for=\"username\">Username</label>\n      <input (input)=\"onUsernameInput($event)\" type=\"text\" class=\"form-control\" id=\"username\" placeholder=\"Enter username\">\n    </div>\n    <div class=\"form-group\">\n      <label for=\"inputPassword\">Password</label>\n      <input (input)=\"onPasswordInput($event)\" type=\"password\" class=\"form-control\" id=\"inputPassword\" placeholder=\"Password\">\n    </div>\n    <button (click)=\"handleLogin()\" type=\"submit\" class=\"btn btn-primary\" id=\"login\">Login</button>\n  </form>","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";"],"sourceRoot":"webpack:///"}